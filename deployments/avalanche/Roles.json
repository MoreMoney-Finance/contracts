{
  "address": "0x9e1EE00d45252aA58623F7d771FB414aA38f0878",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "character",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "playerBefore",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "playerNew",
          "type": "address"
        }
      ],
      "name": "CharacterAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "RoleGiven",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "executor",
      "outputs": [
        {
          "internalType": "address",
          "name": "exec",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "giveRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mainCharacters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "removeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "role",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        }
      ],
      "name": "setMainCharacter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7fef3e4fac369cfd174b502482cb327b70b7e6277808bc630bd451510680fe85",
  "receipt": {
    "to": null,
    "from": "0xC74401498312326cE31A23494eCbaC1449bd7235",
    "contractAddress": "0x9e1EE00d45252aA58623F7d771FB414aA38f0878",
    "transactionIndex": 24,
    "gasUsed": "508095",
    "logsBloom": "0x
    "blockHash": "0x2d545798a3980f7cd3b0f4d11967d02e4216144515a58bad9b0071611402d9a0",
    "transactionHash": "0x7fef3e4fac369cfd174b502482cb327b70b7e6277808bc630bd451510680fe85",
    "logs": [
      {
        "transactionIndex": 24,
        "blockNumber": 9228367,
        "transactionHash": "0x7fef3e4fac369cfd174b502482cb327b70b7e6277808bc630bd451510680fe85",
        "address": "0x9e1EE00d45252aA58623F7d771FB414aA38f0878",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c74401498312326ce31a23494ecbac1449bd7235"
        ],
        "data": "0x",
        "logIndex": 81,
        "blockHash": "0x2d545798a3980f7cd3b0f4d11967d02e4216144515a58bad9b0071611402d9a0"
      },
      {
        "transactionIndex": 24,
        "blockNumber": 9228367,
        "transactionHash": "0x7fef3e4fac369cfd174b502482cb327b70b7e6277808bc630bd451510680fe85",
        "address": "0x9e1EE00d45252aA58623F7d771FB414aA38f0878",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000c74401498312326ce31a23494ecbac1449bd7235",
          "0x000000000000000000000000c74401498312326ce31a23494ecbac1449bd7235"
        ],
        "data": "0x",
        "logIndex": 82,
        "blockHash": "0x2d545798a3980f7cd3b0f4d11967d02e4216144515a58bad9b0071611402d9a0"
      }
    ],
    "blockNumber": 9228367,
    "cumulativeGasUsed": "3478020",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC74401498312326cE31A23494eCbaC1449bd7235"
  ],
  "solcInputHash": "c08fcdf1bf8a33e9484a221e6792b02a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"character\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"playerBefore\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"playerNew\",\"type\":\"address\"}],\"name\":\"CharacterAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RoleGiven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"exec\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"giveRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mainCharacters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"role\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"}],\"name\":\"setMainCharacter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executor()\":{\"details\":\"returns the current executor\"},\"giveRole(uint256,address)\":{\"details\":\"assign role to an account\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeRole(uint256,address)\":{\"details\":\"revoke role of a particular account\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMainCharacter(uint256,address)\":{\"details\":\"set main character\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Manage permissions of contracts and ownership of everything owned by a multisig wallet during beta and will then be transfered to governance\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/roles/Roles.sol\":\"Roles\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/roles/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../../interfaces/IDependencyController.sol\\\";\\n\\n// we chose not to go with an enum\\n// to make this list easy to extend\\nuint256 constant FUND_TRANSFERER = 1;\\nuint256 constant MINTER_BURNER = 2;\\nuint256 constant TRANCHE = 3;\\nuint256 constant ORACLE_LISTENER = 4;\\nuint256 constant TRANCHE_TRANSFERER = 5;\\nuint256 constant UNDERWATER_LIQUIDATOR = 6;\\nuint256 constant LIQUIDATION_PROTECTED = 7;\\n\\nuint256 constant PROTOCOL_TOKEN = 100;\\nuint256 constant FUND = 101;\\nuint256 constant STABLECOIN = 102;\\nuint256 constant FEE_RECIPIENT = 103;\\nuint256 constant STRATEGY_REGISTRY = 104;\\nuint256 constant TRANCHE_ID_SERVICE = 105;\\nuint256 constant ORACLE_REGISTRY = 106;\\nuint256 constant ISOLATED_LENDING = 107;\\nuint256 constant TWAP_ORACLE = 108;\\nuint256 constant CURVE_POOL = 109;\\nuint256 constant ISOLATED_LENDING_LIQUIDATION = 110;\\n\\nuint256 constant DIRECT_LIQUIDATOR = 200;\\nuint256 constant LPT_LIQUIDATOR = 201;\\n\\nuint256 constant DISABLER = 1001;\\nuint256 constant DEPENDENCY_CONTROLLER = 1002;\\nuint256 constant ACTIVATOR = 1003;\\n\\n/// @title Manage permissions of contracts and ownership of everything\\n/// owned by a multisig wallet during\\n/// beta and will then be transfered to governance\\ncontract Roles is Ownable {\\n    mapping(address => mapping(uint256 => bool)) public roles;\\n    mapping(uint256 => address) public mainCharacters;\\n\\n    event RoleGiven(uint256 indexed role, address player);\\n    event CharacterAssigned(\\n        uint256 indexed character,\\n        address playerBefore,\\n        address playerNew\\n    );\\n    event RoleRemoved(uint256 indexed role, address player);\\n\\n    constructor(address targetOwner) Ownable() {\\n        transferOwnership(targetOwner);\\n    }\\n\\n    /// @dev Throws if called by any account other than the owner.\\n    modifier onlyOwnerExecDepController() {\\n        require(\\n            owner() == msg.sender ||\\n                executor() == msg.sender ||\\n                mainCharacters[DEPENDENCY_CONTROLLER] == msg.sender,\\n            \\\"Roles: caller is not the owner\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev assign role to an account\\n    function giveRole(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        emit RoleGiven(role, actor);\\n        roles[actor][role] = true;\\n    }\\n\\n    /// @dev revoke role of a particular account\\n    function removeRole(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        emit RoleRemoved(role, actor);\\n        roles[actor][role] = false;\\n    }\\n\\n    /// @dev set main character\\n    function setMainCharacter(uint256 role, address actor)\\n        external\\n        onlyOwnerExecDepController\\n    {\\n        emit CharacterAssigned(role, mainCharacters[role], actor);\\n        mainCharacters[role] = actor;\\n    }\\n\\n    /// @dev returns the current executor\\n    function executor() public returns (address exec) {\\n        address depController = mainCharacters[DEPENDENCY_CONTROLLER];\\n        if (depController != address(0)) {\\n            exec = IDependencyController(depController).currentExecutor();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3943a3a26be2ad50eb6076423d5048f0820430d001e29347eb880958240124a8\",\"license\":\"BUSL-1.1\"},\"interfaces/IDependencyController.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\ninterface IDependencyController {\\n    function currentExecutor() external returns (address);\\n}\\n\",\"keccak256\":\"0xc65a455a81ab4bc8e0737d03691c159f28bfd6885ef8b99ddd8dec558ccfeb32\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161094838038061094883398101604081905261002f91610167565b61003833610047565b61004181610097565b50610195565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b600060208284031215610178578081fd5b81516001600160a01b038116811461018e578182fd5b9392505050565b6107a4806101a46000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806325398f83146100885780633238405b1461009d5780634d537769146100b0578063715018a6146100c35780638da5cb5b146100cb578063b4ed0b6d146100e9578063c34c08e514610112578063f0723d971461011a578063f2fde38b14610158575b600080fd5b61009b61009636600461068a565b61016b565b005b61009b6100ab36600461068a565b610252565b61009b6100be36600461068a565b61032b565b61009b610428565b6100d3610463565b6040516100e091906106b9565b60405180910390f35b6100d36100f7366004610672565b6002602052600090815260409020546001600160a01b031681565b6100d3610472565b610148610128366004610647565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100e0565b61009b610166366004610608565b610518565b33610174610463565b6001600160a01b0316148061019857503361018d610472565b6001600160a01b0316145b806101c557506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6101ea5760405162461bcd60e51b81526004016101e190610702565b60405180910390fd5b817f6732a18397198a65db77f7fcdd9fac767f967948e84624b713ba25b2e6193b118260405161021a91906106b9565b60405180910390a26001600160a01b03166000908152600160208181526040808420948452939052919020805460ff19169091179055565b3361025b610463565b6001600160a01b0316148061027f575033610274610472565b6001600160a01b0316145b806102ac57506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6102c85760405162461bcd60e51b81526004016101e190610702565b817f25d2876b58af8bf9f5061353680efd3429247d680d369d544446de4b3a686781826040516102f891906106b9565b60405180910390a26001600160a01b0316600090815260016020908152604080832093835292905220805460ff19169055565b33610334610463565b6001600160a01b0316148061035857503361034d610472565b6001600160a01b0316145b8061038557506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6103a15760405162461bcd60e51b81526004016101e190610702565b6000828152600260209081526040918290205482516001600160a01b0391821681529084169181019190915283917f81a5078d0eebd72bf0df7b39859ebfc8795fb69fc69b48138005ab3f2ba3630c910160405180910390a260009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b33610431610463565b6001600160a01b0316146104575760405162461bcd60e51b81526004016101e1906106cd565b61046160006105b8565b565b6000546001600160a01b031690565b6103ea6000908152600260205260008051602061074f833981519152546001600160a01b0316801561051457806001600160a01b0316636b60a09b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610511919061062b565b91505b5090565b33610521610463565b6001600160a01b0316146105475760405162461bcd60e51b81526004016101e1906106cd565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e1565b6105b5816105b8565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610619578081fd5b813561062481610739565b9392505050565b60006020828403121561063c578081fd5b815161062481610739565b60008060408385031215610659578081fd5b823561066481610739565b946020939093013593505050565b600060208284031215610683578081fd5b5035919050565b6000806040838503121561069c578182fd5b8235915060208301356106ae81610739565b809150509250929050565b6001600160a01b0391909116815260200190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f526f6c65733a2063616c6c6572206973206e6f7420746865206f776e65720000604082015260600190565b6001600160a01b03811681146105b557600080fdfedbe5cd5858d8b8ba8ddaf6817490b63aa346482dc8fac5b92758c8d2c1b98153a264697066735822122050335221c57ac5cd509769ac23f471cce8b6d90a71d2fb5382e02cfe935f0b6c64736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100835760003560e01c806325398f83146100885780633238405b1461009d5780634d537769146100b0578063715018a6146100c35780638da5cb5b146100cb578063b4ed0b6d146100e9578063c34c08e514610112578063f0723d971461011a578063f2fde38b14610158575b600080fd5b61009b61009636600461068a565b61016b565b005b61009b6100ab36600461068a565b610252565b61009b6100be36600461068a565b61032b565b61009b610428565b6100d3610463565b6040516100e091906106b9565b60405180910390f35b6100d36100f7366004610672565b6002602052600090815260409020546001600160a01b031681565b6100d3610472565b610148610128366004610647565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100e0565b61009b610166366004610608565b610518565b33610174610463565b6001600160a01b0316148061019857503361018d610472565b6001600160a01b0316145b806101c557506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6101ea5760405162461bcd60e51b81526004016101e190610702565b60405180910390fd5b817f6732a18397198a65db77f7fcdd9fac767f967948e84624b713ba25b2e6193b118260405161021a91906106b9565b60405180910390a26001600160a01b03166000908152600160208181526040808420948452939052919020805460ff19169091179055565b3361025b610463565b6001600160a01b0316148061027f575033610274610472565b6001600160a01b0316145b806102ac57506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6102c85760405162461bcd60e51b81526004016101e190610702565b817f25d2876b58af8bf9f5061353680efd3429247d680d369d544446de4b3a686781826040516102f891906106b9565b60405180910390a26001600160a01b0316600090815260016020908152604080832093835292905220805460ff19169055565b33610334610463565b6001600160a01b0316148061035857503361034d610472565b6001600160a01b0316145b8061038557506103ea600052600260205260008051602061074f833981519152546001600160a01b031633145b6103a15760405162461bcd60e51b81526004016101e190610702565b6000828152600260209081526040918290205482516001600160a01b0391821681529084169181019190915283917f81a5078d0eebd72bf0df7b39859ebfc8795fb69fc69b48138005ab3f2ba3630c910160405180910390a260009182526002602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b33610431610463565b6001600160a01b0316146104575760405162461bcd60e51b81526004016101e1906106cd565b61046160006105b8565b565b6000546001600160a01b031690565b6103ea6000908152600260205260008051602061074f833981519152546001600160a01b0316801561051457806001600160a01b0316636b60a09b6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610511919061062b565b91505b5090565b33610521610463565b6001600160a01b0316146105475760405162461bcd60e51b81526004016101e1906106cd565b6001600160a01b0381166105ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101e1565b6105b5816105b8565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610619578081fd5b813561062481610739565b9392505050565b60006020828403121561063c578081fd5b815161062481610739565b60008060408385031215610659578081fd5b823561066481610739565b946020939093013593505050565b600060208284031215610683578081fd5b5035919050565b6000806040838503121561069c578182fd5b8235915060208301356106ae81610739565b809150509250929050565b6001600160a01b0391909116815260200190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f526f6c65733a2063616c6c6572206973206e6f7420746865206f776e65720000604082015260600190565b6001600160a01b03811681146105b557600080fdfedbe5cd5858d8b8ba8ddaf6817490b63aa346482dc8fac5b92758c8d2c1b98153a264697066735822122050335221c57ac5cd509769ac23f471cce8b6d90a71d2fb5382e02cfe935f0b6c64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executor()": {
        "details": "returns the current executor"
      },
      "giveRole(uint256,address)": {
        "details": "assign role to an account"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeRole(uint256,address)": {
        "details": "revoke role of a particular account"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setMainCharacter(uint256,address)": {
        "details": "set main character"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Manage permissions of contracts and ownership of everything owned by a multisig wallet during beta and will then be transfered to governance",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/roles/Roles.sol:Roles",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 20377,
        "contract": "contracts/roles/Roles.sol:Roles",
        "label": "roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
      },
      {
        "astId": 20381,
        "contract": "contracts/roles/Roles.sol:Roles",
        "label": "mainCharacters",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_bool)"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}