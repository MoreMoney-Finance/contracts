{
  "address": "0x95dd4B039220D18FE41148786bde934a14c5e9CD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vestingToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "burnableByAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rescueFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "setVestingStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setVestingTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3314e999dfc4a29b4b8f1360dd41c5d5b3f3fe42addd6625ed0be58af354d7dc",
  "receipt": {
    "to": null,
    "from": "0xC74401498312326cE31A23494eCbaC1449bd7235",
    "contractAddress": "0x95dd4B039220D18FE41148786bde934a14c5e9CD",
    "transactionIndex": 26,
    "gasUsed": "784405",
    "logsBloom": "0x
    "blockHash": "0x3418cdc2b8a92904e5282d1424c7a64400c0b1044fd5dedb9c6863b70afdf293",
    "transactionHash": "0x3314e999dfc4a29b4b8f1360dd41c5d5b3f3fe42addd6625ed0be58af354d7dc",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 10001405,
        "transactionHash": "0x3314e999dfc4a29b4b8f1360dd41c5d5b3f3fe42addd6625ed0be58af354d7dc",
        "address": "0x95dd4B039220D18FE41148786bde934a14c5e9CD",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c74401498312326ce31a23494ecbac1449bd7235"
        ],
        "data": "0x",
        "logIndex": 73,
        "blockHash": "0x3418cdc2b8a92904e5282d1424c7a64400c0b1044fd5dedb9c6863b70afdf293"
      }
    ],
    "blockNumber": 10001405,
    "cumulativeGasUsed": "3781554",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd9D90f882CDdD6063959A9d837B05Cb748718A05"
  ],
  "solcInputHash": "9f565ce61ed677f4d7dbb9ba9d30221e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"burnableByAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"setVestingStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setVestingTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Withdraw claimable amounts\"},\"burnableByAccount(address)\":{\"notice\":\"How much a user can claim\"},\"mint(address[],uint256[])\":{\"notice\":\"Assign claims to an array of recipients\"},\"rescueFunds(address,address,uint256)\":{\"notice\":\"Rescue stranded funds\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/rewards/VestingLaunchReward.sol\":\"VestingLaunchReward\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/rewards/VestingLaunchReward.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\ncontract VestingLaunchReward is Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    // total amount of vesting toime\\n    uint256 public vestingTime = 100 days;\\n    // when the vesting starts\\n    uint256 public vestingStart;\\n\\n    // how much a user can still withdraw\\n    mapping(address => uint256) public balanceOf;\\n    // how much a user has withdrawn\\n    mapping(address => uint256) public withdrawn;\\n\\n    IERC20 public immutable vestingToken;\\n\\n    constructor(address _vestingToken) {\\n        vestingStart = block.timestamp - (10 days);\\n        vestingToken = IERC20(_vestingToken);\\n    }\\n\\n    /// Assign claims to an array of recipients\\n    function mint(address[] calldata recipients, uint256[] calldata amounts)\\n        external\\n        onlyOwner\\n    {\\n        require(recipients.length == amounts.length, \\\"Mismatched arrays\\\");\\n        for (uint256 i; recipients.length > i; i++) {\\n            balanceOf[recipients[i]] = amounts[i];\\n        }\\n    }\\n\\n    /// Withdraw claimable amounts\\n    function burn(uint256 amount) external {\\n        require(\\n            burnableByAccount(msg.sender) >= amount,\\n            \\\"Trying to withdraw too much\\\"\\n        );\\n        withdrawn[msg.sender] += amount;\\n        balanceOf[msg.sender] -= amount;\\n        vestingToken.safeTransfer(msg.sender, amount);\\n    }\\n\\n    /// How much a user can claim\\n    function burnableByAccount(address account) public view returns (uint256) {\\n        uint256 timeDelta = block.timestamp - vestingStart;\\n\\n        uint256 balance = balanceOf[account];\\n        uint256 alreadyWithdrawn = withdrawn[account];\\n\\n        uint256 totalClaim = balance + alreadyWithdrawn;\\n\\n        uint256 totalVested = min(\\n            totalClaim,\\n            (totalClaim * timeDelta) / vestingTime\\n        );\\n        return min(balance, totalVested - alreadyWithdrawn);\\n    }\\n\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a >= b) {\\n            return b;\\n        } else {\\n            return a;\\n        }\\n    }\\n\\n    /// Rescue stranded funds\\n    function rescueFunds(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external onlyOwner {\\n        IERC20(token).safeTransfer(recipient, amount);\\n    }\\n\\n    function setVestingTime(uint256 time) external onlyOwner {\\n        vestingTime = time;\\n    }\\n\\n    function setVestingStart(uint256 startTime) external onlyOwner {\\n        vestingStart = startTime;\\n    }\\n}\\n\",\"keccak256\":\"0xd4fedcead413278c0dec04606762876b7006d80a55402026ec3928dee39114b4\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60a06040526283d60060015534801561001757600080fd5b50604051610d15380380610d15833981016040819052610036916100b4565b61003f33610064565b61004c620d2f00426100e2565b60025560601b6001600160601b031916608052610105565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c5578081fd5b81516001600160a01b03811681146100db578182fd5b9392505050565b60008282101561010057634e487b7160e01b81526011600452602481fd5b500390565b60805160601c610bec6101296000396000818160d901526102e30152610bec6000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c8063126f854d146100bf57806319d152fa146100d4578063254800d41461011857806342966c681461012f5780636ccae054146101425780636ef610921461015557806370a0823114610175578063715018a614610195578063802921601461019d5780638da5cb5b146101b0578063c7dab436146101b8578063d9a80dbc146101c1578063e467f7e0146101d4578063f2fde38b146101e7575b600080fd5b6100d26100cd366004610a4b565b6101fa565b005b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61012160025481565b60405190815260200161010f565b6100d261013d366004610a4b565b610237565b6100d2610150366004610988565b61030d565b61012161016336600461096e565b60046020526000908152604090205481565b61012161018336600461096e565b60036020526000908152604090205481565b6100d2610355565b6100d26101ab366004610a4b565b610390565b6100fb6103c4565b61012160015481565b6101216101cf36600461096e565b6103d3565b6100d26101e23660046109c3565b61045a565b6100d26101f536600461096e565b61056a565b336102036103c4565b6001600160a01b0316146102325760405162461bcd60e51b815260040161022990610ab2565b60405180910390fd5b600255565b80610241336103d3565b101561028d5760405162461bcd60e51b815260206004820152601b60248201527a0a8e4f2d2dcce40e8de40eed2e8d0c8e4c2ee40e8dede40daeac6d602b1b6044820152606401610229565b33600090815260046020526040812080548392906102ac908490610ae7565b909155505033600090815260036020526040812080548392906102d0908490610b3e565b9091555061030a90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610607565b50565b336103166103c4565b6001600160a01b03161461033c5760405162461bcd60e51b815260040161022990610ab2565b6103506001600160a01b0384168383610607565b505050565b3361035e6103c4565b6001600160a01b0316146103845760405162461bcd60e51b815260040161022990610ab2565b61038e6000610659565b565b336103996103c4565b6001600160a01b0316146103bf5760405162461bcd60e51b815260040161022990610ab2565b600155565b6000546001600160a01b031690565b600080600254426103e49190610b3e565b6001600160a01b038416600090815260036020908152604080832054600490925282205492935091906104178284610ae7565b9050600061043d82600154878561042e9190610b1f565b6104389190610aff565b6106a9565b905061044d846104388584610b3e565b955050505050505b919050565b336104636103c4565b6001600160a01b0316146104895760405162461bcd60e51b815260040161022990610ab2565b8281146104cc5760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606401610229565b60005b80841115610563578282828181106104f757634e487b7160e01b600052603260045260246000fd5b905060200201356003600087878581811061052257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610537919061096e565b6001600160a01b031681526020810191909152604001600020558061055b81610b85565b9150506104cf565b5050505050565b336105736103c4565b6001600160a01b0316146105995760405162461bcd60e51b815260040161022990610ab2565b6001600160a01b0381166105fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b61030a81610659565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103509084906106c2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183106106b95750806106bc565b50815b92915050565b6000610717826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107949092919063ffffffff16565b80519091501561035057808060200190518101906107359190610a2b565b6103505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610229565b60606107a384846000856107ad565b90505b9392505050565b60608247101561080e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610229565b843b61085c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610229565b600080866001600160a01b031685876040516108789190610a63565b60006040518083038185875af1925050503d80600081146108b5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ba565b606091505b50915091506108ca8282866108d5565b979650505050505050565b606083156108e45750816107a6565b8251156108f45782518084602001fd5b8160405162461bcd60e51b81526004016102299190610a7f565b80356001600160a01b038116811461045557600080fd5b60008083601f840112610936578182fd5b5081356001600160401b0381111561094c578182fd5b6020830191508360208260051b850101111561096757600080fd5b9250929050565b60006020828403121561097f578081fd5b6107a68261090e565b60008060006060848603121561099c578182fd5b6109a58461090e565b92506109b36020850161090e565b9150604084013590509250925092565b600080600080604085870312156109d8578081fd5b84356001600160401b03808211156109ee578283fd5b6109fa88838901610925565b90965094506020870135915080821115610a12578283fd5b50610a1f87828801610925565b95989497509550505050565b600060208284031215610a3c578081fd5b815180151581146107a6578182fd5b600060208284031215610a5c578081fd5b5035919050565b60008251610a75818460208701610b55565b9190910192915050565b6000602082528251806020840152610a9e816040850160208701610b55565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610afa57610afa610ba0565b500190565b600082610b1a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b3957610b39610ba0565b500290565b600082821015610b5057610b50610ba0565b500390565b60005b83811015610b70578181015183820152602001610b58565b83811115610b7f576000848401525b50505050565b6000600019821415610b9957610b99610ba0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e15220d159274687011cd29147340f2176a4a820487ea0147d3e67bf53e66ce264736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ba5760003560e01c8063126f854d146100bf57806319d152fa146100d4578063254800d41461011857806342966c681461012f5780636ccae054146101425780636ef610921461015557806370a0823114610175578063715018a614610195578063802921601461019d5780638da5cb5b146101b0578063c7dab436146101b8578063d9a80dbc146101c1578063e467f7e0146101d4578063f2fde38b146101e7575b600080fd5b6100d26100cd366004610a4b565b6101fa565b005b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61012160025481565b60405190815260200161010f565b6100d261013d366004610a4b565b610237565b6100d2610150366004610988565b61030d565b61012161016336600461096e565b60046020526000908152604090205481565b61012161018336600461096e565b60036020526000908152604090205481565b6100d2610355565b6100d26101ab366004610a4b565b610390565b6100fb6103c4565b61012160015481565b6101216101cf36600461096e565b6103d3565b6100d26101e23660046109c3565b61045a565b6100d26101f536600461096e565b61056a565b336102036103c4565b6001600160a01b0316146102325760405162461bcd60e51b815260040161022990610ab2565b60405180910390fd5b600255565b80610241336103d3565b101561028d5760405162461bcd60e51b815260206004820152601b60248201527a0a8e4f2d2dcce40e8de40eed2e8d0c8e4c2ee40e8dede40daeac6d602b1b6044820152606401610229565b33600090815260046020526040812080548392906102ac908490610ae7565b909155505033600090815260036020526040812080548392906102d0908490610b3e565b9091555061030a90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610607565b50565b336103166103c4565b6001600160a01b03161461033c5760405162461bcd60e51b815260040161022990610ab2565b6103506001600160a01b0384168383610607565b505050565b3361035e6103c4565b6001600160a01b0316146103845760405162461bcd60e51b815260040161022990610ab2565b61038e6000610659565b565b336103996103c4565b6001600160a01b0316146103bf5760405162461bcd60e51b815260040161022990610ab2565b600155565b6000546001600160a01b031690565b600080600254426103e49190610b3e565b6001600160a01b038416600090815260036020908152604080832054600490925282205492935091906104178284610ae7565b9050600061043d82600154878561042e9190610b1f565b6104389190610aff565b6106a9565b905061044d846104388584610b3e565b955050505050505b919050565b336104636103c4565b6001600160a01b0316146104895760405162461bcd60e51b815260040161022990610ab2565b8281146104cc5760405162461bcd60e51b81526020600482015260116024820152704d69736d6174636865642061727261797360781b6044820152606401610229565b60005b80841115610563578282828181106104f757634e487b7160e01b600052603260045260246000fd5b905060200201356003600087878581811061052257634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610537919061096e565b6001600160a01b031681526020810191909152604001600020558061055b81610b85565b9150506104cf565b5050505050565b336105736103c4565b6001600160a01b0316146105995760405162461bcd60e51b815260040161022990610ab2565b6001600160a01b0381166105fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610229565b61030a81610659565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103509084906106c2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008183106106b95750806106bc565b50815b92915050565b6000610717826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107949092919063ffffffff16565b80519091501561035057808060200190518101906107359190610a2b565b6103505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610229565b60606107a384846000856107ad565b90505b9392505050565b60608247101561080e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610229565b843b61085c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610229565b600080866001600160a01b031685876040516108789190610a63565b60006040518083038185875af1925050503d80600081146108b5576040519150601f19603f3d011682016040523d82523d6000602084013e6108ba565b606091505b50915091506108ca8282866108d5565b979650505050505050565b606083156108e45750816107a6565b8251156108f45782518084602001fd5b8160405162461bcd60e51b81526004016102299190610a7f565b80356001600160a01b038116811461045557600080fd5b60008083601f840112610936578182fd5b5081356001600160401b0381111561094c578182fd5b6020830191508360208260051b850101111561096757600080fd5b9250929050565b60006020828403121561097f578081fd5b6107a68261090e565b60008060006060848603121561099c578182fd5b6109a58461090e565b92506109b36020850161090e565b9150604084013590509250925092565b600080600080604085870312156109d8578081fd5b84356001600160401b03808211156109ee578283fd5b6109fa88838901610925565b90965094506020870135915080821115610a12578283fd5b50610a1f87828801610925565b95989497509550505050565b600060208284031215610a3c578081fd5b815180151581146107a6578182fd5b600060208284031215610a5c578081fd5b5035919050565b60008251610a75818460208701610b55565b9190910192915050565b6000602082528251806020840152610a9e816040850160208701610b55565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610afa57610afa610ba0565b500190565b600082610b1a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b3957610b39610ba0565b500290565b600082821015610b5057610b50610ba0565b500390565b60005b83811015610b70578181015183820152602001610b58565b83811115610b7f576000848401525b50505050565b6000600019821415610b9957610b99610ba0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e15220d159274687011cd29147340f2176a4a820487ea0147d3e67bf53e66ce264736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(uint256)": {
        "notice": "Withdraw claimable amounts"
      },
      "burnableByAccount(address)": {
        "notice": "How much a user can claim"
      },
      "mint(address[],uint256[])": {
        "notice": "Assign claims to an array of recipients"
      },
      "rescueFunds(address,address,uint256)": {
        "notice": "Rescue stranded funds"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/rewards/VestingLaunchReward.sol:VestingLaunchReward",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 23244,
        "contract": "contracts/rewards/VestingLaunchReward.sol:VestingLaunchReward",
        "label": "vestingTime",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 23246,
        "contract": "contracts/rewards/VestingLaunchReward.sol:VestingLaunchReward",
        "label": "vestingStart",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 23250,
        "contract": "contracts/rewards/VestingLaunchReward.sol:VestingLaunchReward",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23254,
        "contract": "contracts/rewards/VestingLaunchReward.sol:VestingLaunchReward",
        "label": "withdrawn",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}